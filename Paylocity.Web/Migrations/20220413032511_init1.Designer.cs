// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paylocity.Web.Logic;

#nullable disable

namespace Paylocity.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220413032511_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActiveAsOfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InactiveAsOfDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPayPeriodsPerYear")
                        .HasColumnType("int");

                    b.Property<float>("PerPayPeriodSalary")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartOfYear")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BenefitAssessmentConfigurations");
                });

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfigurationCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BenefitAssessmentConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("CostPerYear")
                        .HasColumnType("real");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("real");

                    b.Property<bool>("HasNameBasedDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NameDiscountMatchingType")
                        .HasColumnType("int");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BenefitAssessmentConfigurationId");

                    b.ToTable("BenefitAssessmentConfigurationCosts");
                });

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfigurationPayPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BenefitAssessmentConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PayPeriodEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayPeriodPayDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayPeriodStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BenefitAssessmentConfigurationId");

                    b.ToTable("BenefitAssessmentConfigurationPayPeriods");
                });

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfigurationCost", b =>
                {
                    b.HasOne("Paylocity.Web.Models.Entities.BenefitAssessmentConfiguration", "BenefitAssessmentConfiguration")
                        .WithMany("BenefitAssessmentConfigurationCosts")
                        .HasForeignKey("BenefitAssessmentConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BenefitAssessmentConfiguration");
                });

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfigurationPayPeriod", b =>
                {
                    b.HasOne("Paylocity.Web.Models.Entities.BenefitAssessmentConfiguration", "BenefitAssessmentConfiguration")
                        .WithMany("BenefitAssessmentConfigurationPayPeriods")
                        .HasForeignKey("BenefitAssessmentConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BenefitAssessmentConfiguration");
                });

            modelBuilder.Entity("Paylocity.Web.Models.Entities.BenefitAssessmentConfiguration", b =>
                {
                    b.Navigation("BenefitAssessmentConfigurationCosts");

                    b.Navigation("BenefitAssessmentConfigurationPayPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
